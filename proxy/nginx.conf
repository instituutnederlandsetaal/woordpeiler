events {}

http {
    # logging
    log_format custom_log '[$time_local] $status $upstream_cache_status $request bytes=$body_bytes_sent gzip=$gzip_ratio';
    access_log /var/log/nginx/access.log custom_log;

    # gzip
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 9;
    gzip_min_length 0;
    gzip_types *;
    gzip_vary on;
    gzip_proxied any;

    # cache
    proxy_cache_path /tmp/backend_word_cache keys_zone=backend_word_cache:4m max_size=500m inactive=1d;
    proxy_cache_path /tmp/backend_static_cache keys_zone=backend_static_cache:1m max_size=10m inactive=1d;
    proxy_cache_path /tmp/backend_trends_cache keys_zone=backend_trends_cache:1m max_size=100m inactive=1d;
    proxy_cache_path /tmp/frontend_cache keys_zone=frontend_cache:1m max_size=10m inactive=1d;

    # rate limiting
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=80r/s;

    # upstreams
    upstream backend {
        server server:8000;
        keepalive 4;
    }
    
    upstream frontend {
        server client:80;
        keepalive 4;
    }

    server {
        listen 80;

        # timeouts
        proxy_send_timeout 3600;
        proxy_read_timeout 3600;

        # cache
        proxy_hide_header Cache-Control;
        proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "max-age=86400, public";

        # backend
        location /api/ {
            proxy_pass http://backend/;
            proxy_cache backend_static_cache;
        }

        # backend frequency
        location /api/word_frequency {
            # rate limiting
            limit_req zone=mylimit burst=25 nodelay;
            proxy_pass http://backend/word_frequency;
            # own cache
            proxy_cache backend_word_cache;
        }

        # backend svg
        location /api/svg {
            # rate limiting
            limit_req zone=mylimit burst=12 nodelay;
            proxy_cache backend_static_cache;
            proxy_pass http://backend/svg;
        }

        # backend trends
        location /api/trends {
            proxy_pass http://backend/trends;
            # own cache
            proxy_cache backend_trends_cache;
            # 5 min caching
            proxy_cache_valid 200 5m;
            add_header Cache-Control "max-age=300, public";
        }

        # frontend
        location / {
            proxy_pass http://frontend/;
            proxy_cache frontend_cache;
            # disregard url params for caching
            proxy_cache_key $scheme$proxy_host$uri;
        }
        
        # frontend assets
        location ~ ^/.*/assets/(.*)$ {
            proxy_cache frontend_cache;
            proxy_pass http://frontend/assets/$1;
        }
    }
}
