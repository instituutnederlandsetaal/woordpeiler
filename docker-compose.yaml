services:

    database:
        image: timescale/timescaledb:2.17.2-pg17
        restart: unless-stopped
        shm_size: 2gb
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - READER_USER=${READER_USER}
            - READER_PASSWORD=${READER_PASSWORD}
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - database:/var/lib/postgresql/data
            - ./database/init_db:/docker-entrypoint-initdb.d/
            - ./database/postgresql.conf:/etc/postgres/postgresql.conf
        command: "-c 'config_file=/etc/postgres/postgresql.conf'"
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
            interval: 3s
            timeout: 5s
            retries: 5

    databuilder:
        image: timescale/timescaledb:2.17.2-pg17
        restart: unless-stopped
        shm_size: 2gb
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - READER_USER=${READER_USER}
            - READER_PASSWORD=${READER_PASSWORD}
        ports:
            - '${DATABUILDER_PORT}:5432'
        volumes:
            - databuilder:/var/lib/postgresql/data
            - ./database/init_db:/docker-entrypoint-initdb.d/
            - ./database/postgresql.conf:/etc/postgres/postgresql.conf
        command: "-c 'config_file=/etc/postgres/postgresql.conf'"
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
            interval: 3s
            timeout: 5s
            retries: 5

    server:
        image: instituutnederlandsetaal/corpustrends-server:${VERSION_LABEL}
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - READER_USER=${READER_USER}
            - READER_PASSWORD=${READER_PASSWORD}
        build:
            context: server
        restart: unless-stopped

    client:
        image: instituutnederlandsetaal/corpustrends-client:${VERSION_LABEL}
        build:
            context: client
        restart: unless-stopped

    proxy:
        image: nginx:1.27.2-alpine3.20
        volumes:
            - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - client
            - server
        ports:
            - "80:80"
        restart: unless-stopped

volumes:
    database:
        name: ${DATABASE_VOLUME}
    databuilder:
        name: ${DATABUILDER_VOLUME}
