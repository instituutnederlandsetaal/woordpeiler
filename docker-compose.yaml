x-defaults: &defaults
    restart: unless-stopped
    shm_size: 2gb
    command: "-c 'config_file=/etc/postgres/postgresql.conf'"
    environment: &environment
        POSTGRES_DB: $POSTGRES_DB
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        READER_USER: $READER_USER
        READER_PASSWORD: $READER_PASSWORD
    healthcheck: &db-health
        test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
        interval: 3s
        timeout: 5s
        retries: 5

services:
    database:
        <<: *defaults
        image: timescale/timescaledb:2.22.1-pg17
        volumes:
            - database:/var/lib/postgresql/data
            - ./database/init_db:/docker-entrypoint-initdb.d/
            - ./database/postgresql.conf:/etc/postgres/postgresql.conf

    builder:
        <<: *defaults
        image: timescale/timescaledb:2.22.1-pg17
        ports:
            - $BUILDER_PORT:5432
        volumes:
            - builder:/var/lib/postgresql/data
            - ./database/init_db:/docker-entrypoint-initdb.d/
            - ./database/postgresql.conf:/etc/postgres/postgresql.conf

    server:
        image: instituutnederlandsetaal/woordpeiler-server:$VERSION
        environment:
            <<: *environment
            POSTGRES_HOST: database # Always refer to database container
            POSTGRES_PORT: $POSTGRES_PORT
            INTERNAL: ${INTERNAL:-false}
        depends_on:
            database:
                condition: service_healthy
        build:
            context: server
        restart: unless-stopped

    client:
        image: instituutnederlandsetaal/woordpeiler-client:$VERSION
        build:
            context: client
        restart: unless-stopped
        volumes:
            - $CLIENT_CONFIG:/usr/share/nginx/html/assets/config/

    proxy:
        image: nginx:1.29.1-alpine3.22-slim
        volumes:
            - ./proxy/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - client
            - server
        ports:
            - $PROXY_PORT:80
        restart: unless-stopped

volumes:
    database:
        name: $DATABASE_VOLUME
    builder:
        name: $BUILDER_VOLUME
